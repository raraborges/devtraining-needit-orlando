<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri>/api/x_58872_needit/needit_api/nigetinfo/{user_name}</default_operation_uri>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>ni_getinfo</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

// Obtém valor do parâmetro do caminho user_name passado na URL
var requestUser = request.pathParams.user_name;
// Obtém o valor do parâmetro de consulta ni_query passado na URL
var requestNIQuery = request.queryParams.ni_query;
	
// Consulta a tabela sys_user para obter o registro do usuário passado 
// no parâmetro do caminho user_id.
var requestUserName = new GlideRecord('sys_user');
requestUserName.get('user_name',requestUser);
	
// Obtenha a contagem (count) de registros da tabela NeedIt ativos em que o usuário do
// parâmetro do caminho user_name é o "Requested for". A consulta codificada é
// das associações de parâmetro de consulta. Agrupar por categoria.
	
var userNICount = new GlideAggregate('x_58872_needit_needit');
userNICount.addAggregate('COUNT');
userNICount.addQuery('u_requested_for',requestUserName.sys_id);
userNICount.addEncodedQuery(requestNIQuery);
userNICount.groupBy('u_request_type');
userNICount.query();
	
var needitRecs = 0;
var niUserRecs = [];
var needitRecsCount = 0;

while (userNICount.next()) {
	needitRecs = userNICount.getAggregate('COUNT');
	var reqType = userNICount.u_request_type.getDisplayValue();
	niUserRecs.push({"requestType": reqType, "count": needitRecs});
	needitRecsCount = parseInt(needitRecsCount) + parseInt(needitRecs);
}
	
// Crie um objeto body. Adicione pares de valor de propriedade ao corpo.
var body = {};
body.totalUserNIRecs = needitRecsCount;
body.catCounts = niUserRecs;
body.user = {"User name": requestUserName.user_name,
"User ID": requestUserName.sys_id};
	
// Envie o objeto de resposta, retornado ao solicitante, para o objeto do corpo.
 
	response.setBody(body);
	
	
})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v1/needit_api/nigetinfo/{user_name}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/nigetinfo/{user_name}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description> Encontre os registros ativos do NeedIt para um usuário. Agrupe por What needed</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-06-16 18:44:02</sys_created_on>
        <sys_id>b574e3ffdb1510104eeca0f2ca96199e</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>ni_getinfo</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_b574e3ffdb1510104eeca0f2ca96199e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-06-17 12:37:11</sys_updated_on>
        <web_service_definition display_value="NeedIt API">aac45f3fdbd110104eeca0f2ca961943</web_service_definition>
        <web_service_version display_value="v1">ed3a1308db2110104eeca0f2ca96191f</web_service_version>
    </sys_ws_operation>
</record_update>
